---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: org2-peer1
  namespace: org2
  labels:
    app.kubernetes.io/name: org2-peer1
    app.kubernetes.io/part-of: org2
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: org2-peer1
      app.kubernetes.io/part-of: org2
  serviceName: org2-peer1
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: peer
      labels:
        app.kubernetes.io/name: org2-peer1
        app.kubernetes.io/part-of: org2
    spec:
      securityContext: {}
      containers:
        - name: peer
          securityContext: {}
          image: hyperledger/fabric-peer:2.4.9
          imagePullPolicy: IfNotPresent
          env:
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: org2-peer1-couchdb
                  key: COUCHDB_USER
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: org2-peer1-couchdb
                  key: COUCHDB_PASSWORD
          envFrom:
            - configMapRef:
                name: org2-peers-env
            - configMapRef:
                name: org2-peer1-env
          ports:
            - name: grpc
              containerPort: 7051
              protocol: TCP
            - name: chaincode
              containerPort: 7052
              protocol: TCP
            - name: operations
              containerPort: 9443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9443
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9443
            initialDelaySeconds: 15
          volumeMounts:
            - name: data
              mountPath: /data

            - name: tls-cert
              mountPath: /config/tls

            - mountPath: /config/msp/signcerts/cert.pem
              name: msp-cert
              subPath: tls.crt
            - mountPath: /config/msp/keystore/key.pem
              name: msp-cert
              subPath: tls.key
            - mountPath: /config/msp/cacerts/cacert.pem
              name: msp-cert
              subPath: ca.crt

            - mountPath: /config/msp/config.yaml
              name: nodeou
              subPath: config.yaml
            - mountPath: /config/core.yaml
              name: peers-config
              subPath: core.yaml
          resources: {}

        - name: couchdb
          image: couchdb:3.2.1
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: org2-peer1-couchdb
          ports:
            - name: couchdb
              containerPort: 5984
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 5984
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 5984
            periodSeconds: 5
          resources: {}
          volumeMounts:
            - name: data
              mountPath: /opt/couchdb/data
              subPath: couchdb

      volumes:
        - name: nodeou
          configMap:
            name: org2-nodeou
        - name: peers-config
          configMap:
            name: org2-peers-config
        - name: tls-cert
          secret:
            secretName: org2-peer1-tls-cert
        - name: msp-cert
          secret:
            secretName: org2-peer1-msp-cert

  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: org2-peer1
          app.kubernetes.io/part-of: org2
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: '1Gi'
